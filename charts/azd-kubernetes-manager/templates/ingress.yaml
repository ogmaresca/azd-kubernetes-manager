{{- if .Values.ingress.enabled }}
{{- if semverCompare ">=1.19.0" .Capabilities.KubeVersion.Version }}
apiVersion: networking.k8s.io/v1
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "azd-kubernetes-manager.fullname" . }}
  labels:
    {{- include "azd-kubernetes-manager.labels" . | nindent 4 }}
    {{- include "azd-kubernetes-manager.stringDict" .Values.ingress.labels | nindent 4 }}
  {{- if .Values.ingress.annotations }}
  annotations:
    {{- include "azd-kubernetes-manager.stringDict" .Values.ingress.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: {{ $.Values.ingress.basePath | quote }}
        backend:
        {{- if semverCompare ">=1.19.0" .Capabilities.KubeVersion.Version }}
          service:
            name: {{ include "azd-kubernetes-manager.fullname" $ }}
            port:
              name: http
        pathType: Prefix
        {{- else }}
          serviceName: {{ include "azd-kubernetes-manager.fullname" $ }}
          servicePort: http
        {{- end }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    {{- range .Values.ingress.hosts }}
  - hosts:
    - {{ . }}
    {{- if $.Values.ingress.secretName }}
    secretName: {{ $.Values.ingress.secretName | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
{{- end -}}
